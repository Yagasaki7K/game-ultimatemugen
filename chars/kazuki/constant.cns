[Data]
life = 1000
attack = 100
defence = 100
fall.defence_up = 50
liedown.time = 60
airjuggle = 15
sparkno = S10060
guard.sparkno = S10030
KO.echo = 0
volume = 50
IntPersistIndex = 30
FloatPersistIndex = 30

[Size]
xscale = 1           ;Horizontal scaling factor.
yscale = 1           ;Vertical scaling factor.
ground.back = 20     ;Player width (back, ground)
ground.front = 20    ;Player width (front, ground)
air.back = 20        ;Player width (back, air)
air.front = 20       ;Player width (front, air)
height =  50         ;Height of player (for opponent to jump over)
attack.dist = 160    ;Default attack distance
proj.attack.dist = 90;Default attack distance for projectiles
proj.doscale = 0     ;Set to 1 to scale projectiles too   
head.pos = -5, -70   ;Approximate position of head
mid.pos = -5, -50    ;Approximate position of midsection
shadowoffset = 0     ;Number of pixels to vertically offset the shadow
draw.offset = 0,0    ;Player drawing offset in pixels (x, y)

[Velocity]
walk.fwd  = 2         ;Walk forward
walk.back = -1.9      ;Walk backward
run.fwd  = 5, 0       ;Run forward (x, y)  - if y<0, player will hop
run.back = -5.5, -3.8 ;Run backward (x, y) - if y=0, player will run
jump.neu = 0,-10    ;Neutral jumping velocity (x, y)
jump.back = -2.2      ;Jump back Speed (x, y)
jump.fwd = 2.4        ;Jump forward Speed (x, y)
runjump.back = -1,-8.1;Running jump speeds (opt)
runjump.fwd = 3,-8.1  
airjump.neu = 0,-8.1     
airjump.back = -2.55,-8.1 
airjump.fwd = 2.5,-8.1    

[Movement]
airjump.num = 0      ;Number of air jumps allowed (opt)
airjump.height = 35  ;Minimum distance from ground before you can air jump (opt)
yaccel = .49         ;Vertical acceleration
stand.friction = .85  ;Friction coefficient when standing
crouch.friction = .82 ;Friction coefficient when crouching

